@using TH.WebUI.Tools.UIComponents

@model TabsDisplay

@{
    Layout = null;
    string cssClass = string.IsNullOrEmpty(Model.Skin) ? "default" : Model.Skin;

    Dictionary<string, object> attrs = Model.Attributes != null ? new Dictionary<string, object>() : null;

    if (Model.Attributes != null)
    {
        foreach (KeyValuePair<string, object> kvp in Model.Attributes)
        {
            if (kvp.Key == "class") { cssClass += " " + kvp.Value; }
            else { attrs[kvp.Key] = kvp.Value; }
        }
    }
}

<div data-mxui="tabs" @(Html.RenderHtmlAttributes(attrs)) class="thui-tabs tool-tabs @(cssClass)">
    @if(Model.Items != null && Model.Items.Count > 0)
    {
        <ul class="tabs">
            @for (int i = 0; i < Model.Items.Count; i++)
            {
                TabsDisplay.Item item = Model.Items[i];

                bool first = i == 0;
                bool last = i >= Model.Items.Count + 1;

                string c = "tab ";
                if (first) { c += " first"; }
                if (last) { c += " last"; }
                if (!first && !last) { c += " between"; }
                if (item.Active) { c += " active"; }

                <li data-hook="tab" data-key="@(item.Key)" data-target="@(item.Key)" class="@(c) no-user-select" @(Html.RenderHtmlAttributes(item.Attributes))>@(item.Label)</li>
            }
        </ul>
        <div class="clear"></div>
    }
</div>