@using TH.Core.Tools.Form.Models
@using TH.Core.Modules.Order.Entities
@using TH.Core.Modules.Door.Entities
@using TH.Core.Modules.Window.Entities
@using TH.Core.Modules.Frame.Entities
@using TH.Core.Modules.Connection.Entities
@using TH.Core.Modules.Glass.Entities
@using TH.Core.Modules.Wood.Entities

@{ 
    //Form orderForm = (Form)ViewData["OrderForm"];
    Order order = (Order)ViewData["order"];
    int? id = (int?)ViewData["orderId"];
    bool createNewOrder = !id.HasValue && order == null;
}

@if (createNewOrder)
{
    <h1>Create new order</h1>

    <div id="order-container">
        <h2>Order Name: <span data-hook="order-name"></span></h2>
        <h3>Order Description: <span data-hook="order-description"></span></h3>
        <h4>Order Date: <span data-hook="order-date"></span></h4>
    </div>
} else
{ 
<div class="order">
    <h1>Update order</h1>
    <div id="order-container">
        <h2>Order Name: <span data-hook="order-name">@order.ProjectName</span></h2>
        <h3>Order Description: <span data-hook="order-description">@order.Description</span></h3>
        <h4>Order Date: <span data-hook="order-date">@order.GetDate()</span></h4>
    </div>
</div>
<div class="order-datas">
    @if (order.OrderDatas is null)
    {
        <h3>No order data to display :(</h3>
    }
    else
    { 
        foreach (OrderData data in order.OrderDatas)
        {
            <div class="data-description">Beschrijving: @data.Description</div>

            <!-- Door -->
            <div class="data-door">
                @if (data.IdDoor != null && data.Door != null)
                {
                    Door door = data.Door;

                    <p>Deur ID: @door.Id</p>
                    <div class="door-width">Deur Breedte: <span>@door.Width</span></div>
                    <div class="door-height">Deur Hoogte: <span>@door.Height</span></div>
                    <div class="door-thickness">Deur Dikte: <span>@door.Thickness</span></div>                    
                }
            </div>

            <!-- //Door -->

            <!-- Window -->
            <div class="data-window">
                @if (data.IdWindow != null && data.Window != null)
                {
                    Window window = data.Window;

                    <p>Raam ID: @window.Id</p>
                    <div class="window-width">Raam Breedte: <span>@window.Width</span></div>
                    <div class="window-hieght">Raam Hoogte: <span>@window.Height</span></div>
                    <div class="window-thickness">Raam Dikte: <span>@window.Thickness</span></div>
                }
            </div>
            <!-- //Window -->

            <!-- Frame -->
            <div class="data-frame">
                @if (data.IdFrame != null && data.Frame != null)
                {
                    Frame frame = data.Frame;
                    <p>Kozijn ID: @frame.Id</p>
                    <div class="frame-width">Raam Breedte: <span>@frame.Width</span></div>
                    <div class="frame-hieght">Raam Hoogte: <span>@frame.Height</span></div>
                    <div class="frame-thickness">Raam Dikte: <span>@frame.Thickness</span></div>
                }
            </div>
            <!-- //Frame -->
        }
    }
</div>

}




<script type="text/javascript">
    $(document).ready(function () {

        // Urls
        var uCreateOrderForm = '@Url.Content("~/modules/order/create-order-form")';

        // Selectors
        var sOrderName = '[data-hook=order-name]';
        var sOrderDescription = '[data-hook=order-description]';
        var sOrderDate = '[data-hook=order-date]';

        // Vars
        var createNewOrder = @Html.Json(createNewOrder);

        if (createNewOrder) {
            RenderCreateNewOrder();
        }

        function RenderCreateNewOrder() {
            DialogSystem.open({
                ajax: {
                    url: uCreateOrderForm
                },
                dimension: { full: false, width: '50%', height: '50%' },
                callback: function (e, data) {
                    //debugger;
                    if (e.action === 'cancel') {
                        // Cancel creation
                        window.location.href = '/modules/order/content';
                    }
                    else {
                        debugger;
                        window.location.href = window.location.href + '?id=' + data.order.Id;
                        //UpdateDomFromOrder(data);
                    }
                }
            });
        }

        function UpdateDomFromOrder(data) {
            debugger;

            // Display order data
            if (data.next === 'order' && data.order !== null) {
                $(sOrderName).html(data.order.ProjectName);
                $(sOrderDescription).html(data.order.Description);
                $(sOrderDate).html(data.order.CreationDate);

                // Open new dialog
                // render create window ? door ? frame dialog
            }


            // if action === 'window' ? 'door' ? 'frame' ? ('child')
            // Show window ? door ? frame ? in page
            // Display button for adding / editing / duplicating 

            // if action === ''
        }
    });
</script>