@using DataAccessLibrary.Controllers
@using DataAccessLibrary.Models

@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.DropDowns

@inject IKozijnController _db 

@if (!Loading())
{
    <SfButton @onclick="@openDialogBtnClick">Raamkozijn samenstellen</SfButton>
    <SfDialog Width="750px" MinHeight="450px" @bind-Visible="@isVisible" IsModal="true" ShowCloseIcon="true">
        <DialogTemplates>
            <Header>
                @*<SfButton @onclick="@(() => GoToStep(1))">Stap 1</SfButton>
                <SfButton @onclick="@(() => GoToStep(2))">Stap 2</SfButton>
                <SfButton @onclick="@(() => GoToStep(3))">Stap 3</SfButton>
                <SfButton @onclick="@(() => GoToStep(4))">Stap 4</SfButton>*@
                <div class="card-title">
                    <span>Stap @(StepId): </span>
                    <span>@kozijnStappen[StepId-1].Description</span>
                </div>

            </Header>
            <Content>
                @if (!Loading())
                {
                    <div class="card-title">
                        <h1>Stap @StepId</h1>
                        <h4>@kozijnStappen[StepId - 1].Description</h4>
                    </div>
                    <div class="add-to-cart-form">
                        <div class="left">
                            @if (StepId == 1)
                            {
                                <div class="sizing">
                                    <div class="d-flex flex-column mb-3">
                                        <input @bind-value="@width_mm" @oninput="@((e) => { width_mm = (string)e.Value; })" type="number" placeholder="Breedte (in mm)" />
                                        <label>Voer een getal tussen 950 en 2600 in</label>
                                    </div>
                                    <div class="d-flex flex-column mb-3">
                                        <input @bind-value="@height_mm" @oninput="@((e) => { height_mm = (string)e.Value; })" type="number" placeholder="Hoogte (in mm)" />
                                        <label>Voer een getal tussen 700 en 1800 in</label>
                                    </div>
                                    <div class="d-flex flex-column mb-3">
                                        <h4>Kleur kozijn</h4>
                                        @if (kozijnKleuren is null)
                                        {
                                            <p><em>Loading...</em></p>
                                        }
                                        else
                                        {
                                            <SfDropDownList TValue="int" TItem="KozijnKleurModel"
                                                            DataSource="@kozijnKleuren" @bind-Value="@kozijnKleurSelect">
                                                <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                            </SfDropDownList>
                                        }
                                    </div>
                                </div>
                            }
                            else if (StepId == 2)
                            {
                                <div class="">

                                </div>
                            }
                        </div>
                        <div class="right">
                            <div class="product-img">

                            </div>
                            <div class="step-buttons">
                                <div class="previous-step-btn">
                                    @if (StepId > 1)
                                    {
                                        <SfButton @onclick="(() => GoToStep(StepId - 1))">Terug</SfButton>
                                    }
                                </div>
                                <div class="next-step-btn @(StepId == 1 ? "full-width" : "")">
                                    @if (StepId < kozijnStappen.Count)
                                    {
                                        <SfButton @onclick="(() => GoToStep(StepId + 1))">Ga naar stap @(StepId + 1)</SfButton>
                                    }
                                </div>
                                <div class="add-to-cart-btn">
                                    @if (StepId == kozijnStappen.Count)
                                    {
                                        <SfButton>Toevoegen</SfButton>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>



                }
                </Content>
            <FooterTemplate>
                Footer
            </FooterTemplate>
        </DialogTemplates>
    </SfDialog>
}
                
<style>
    .add-to-cart-form{
        display: flex;
    }

    .left{
        width: 60%;
    }

    .right{
        width: 40%;
    }

    .right .step-buttons{
        display: block;
        width: 100%;
    }

    .right .step-buttons .previous-step-btn{
        display: inline;
        width: 25%;
    }

    .right .step-buttons .next-step-btn,
    .right .step-buttons .add-to-cart-btn{
        display: inline;
        width: 75%;
    }

    .right .step-buttons .next-step-btn.full-width{
        width: 90%
    }

    .sizing input{
        font-size: 22px!important;
        line-height: 36px;
    }
</style>

@code {
    // Dialog 
    private int StepId = 1;
    private List<string> StapDescr = new List<string>() { "Maatvoering", "Specificaties", "Extra opties" };
    private bool isVisible { get; set; } = false;

    // Values
    private string width_mm;
    private string height_mm;
    private int kozijnKleurSelect = 1;

    private List<KozijnKleurModel> kozijnKleuren;
    private List<KozijnStappenModel> kozijnStappen;


    protected override async Task OnInitializedAsync()
    {
        kozijnKleuren = await _db.GetKozijnKleurModels();

        kozijnStappen = await _db.GetKozijnStappenModels(KozijnStappenModel.Types.Raamkozijn);
    }

    private void openDialogBtnClick()
    {
        isVisible = true;
    }

    private void GoToStep(int step)
    {
        StepId = step;
    }

    private bool Loading()
    {
        if (kozijnKleuren is null || kozijnStappen is null)
        {
            return true;
        }
        return false;
    }

}
