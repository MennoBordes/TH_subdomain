@page "/people"

@inject HttpClient HttpClient
@inject PeopleClient PeopleClient

@using TH_Blazor.Shared.Models
@using TH_Blazor.Client.ViewModel

<h3>People Page</h3>

<h4>Insert new person</h4>
<EditForm Model="@newPerson" OnValidSubmit="@InsertPerson">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputText id="firstName" @bind-Value="newPerson.FirstName" />
    <InputText id="lastName" @bind-Value="newPerson.LastName" />
    <InputText id="emailAddress" @bind-Value="newPerson.EmailAddress" />

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

<h4>Current People</h4>

@if (people is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email Address</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in people)
            {
                <tr>
                    <td>@person.FirstName</td>
                    <td>@person.LastName</td>
                    <td>@person.EmailAddress</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<PeopleModel> people;

    private DisplayPersonModel newPerson = new DisplayPersonModel();

    protected override async Task OnInitializedAsync()
    {
        //people = await _db.GetPeople();
        people = await PeopleClient.GetPeoples();
        //people = await HttpClient.GetFromJsonAsync<List<PeopleModel>>("people");
    }

    private async Task InsertPerson()
    {
        PeopleModel p = new PeopleModel()
        {
            FirstName = newPerson.FirstName,
            LastName = newPerson.LastName,
            EmailAddress = newPerson.EmailAddress
        };

        await PeopleClient.AddPerson(p);
        //await _db.InsertPerson(p);

        people.Add(p);
    }
}
